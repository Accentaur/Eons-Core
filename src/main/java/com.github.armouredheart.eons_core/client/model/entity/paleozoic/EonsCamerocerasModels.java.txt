// package
package com.github.armouredheart.eons_core.client.model.entity.paleozoic;

// Minecraft imports
import net.minecraft.util.math.MathHelper;
import net.minecraft.client.renderer.entity.model.RendererModel;
import net.minecraft.entity.Entity;

// Forge imports
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;

// Eons imports
import com.github.armouredheart.eons_core.client.model.entity.EonsEntityModel;

// misc imports
import com.mojang.blaze3d.platform.GlStateManager;

@OnlyIn(Dist.CLIENT)

// *** Attributes ***
public class EonsCamerocerasModels<T extends Entity> extends EonsEntityModel<T> {
    public RendererModel shell;
    public RendererModel shell_1;
    public RendererModel head;
    public RendererModel cap;
    public RendererModel shell_2;
    public RendererModel shell_3;
    public RendererModel shell_4;
    public RendererModel shell_5;
    public RendererModel shell_6;
    public RendererModel LBtenticel;
    public RendererModel shape14;
    public RendererModel TLtenticel;
    public RendererModel BRtenticel;
    public RendererModel LTtenticel;
    public RendererModel Ttenticel;
    public RendererModel Btenticel;
    public RendererModel BLtenticel;
    public RendererModel TRtenticel;
    public RendererModel RTtenticel;
    public RendererModel RBtenticel;
    public RendererModel tenticel;
    public RendererModel tenticel_1;
    public RendererModel tenticel_2;
    public RendererModel tenticel_3;
    public RendererModel tenticel_4;
    public RendererModel tenticel_5;
    public RendererModel tenticel_6;
    public RendererModel tenticel_7;
    public RendererModel tenticel_8;
    public RendererModel tenticel_9;

    // *** Constructors ***
    public EonsCamerocerasModels() {
        this.textureWidth = 164;
        this.textureHeight = 100;
        this.head = new ModelRenderer(this, 121, 21);
        this.head.setRotationPoint(0.0F, 0.6F, 6.0F);
        this.head.addBox(-6.0F, -5.5F, 0.0F, 12, 9, 9, 0.0F);
        this.setRotateAngle(head, -0.27314402793711257F, 0.0F, 0.0F);
        this.shape14 = new ModelRenderer(this, 0, 0);
        this.shape14.setRotationPoint(0.0F, -1.2F, 9.0F);
        this.shape14.addBox(-1.0F, -2.0F, -2.0F, 2, 4, 4, 0.0F);
        this.setRotateAngle(shape14, 0.7853981633974483F, 0.0F, 0.0F);
        this.shell_3 = new ModelRenderer(this, 0, 32);
        this.shell_3.setRotationPoint(0.0F, 0.0F, -16.0F);
        this.shell_3.addBox(-5.0F, -5.0F, -12.0F, 10, 10, 12, 0.0F);
        this.tenticel_7 = new ModelRenderer(this, 40, 72);
        this.tenticel_7.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_7.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.RTtenticel = new ModelRenderer(this, 40, 60);
        this.RTtenticel.setRotationPoint(-5.0F, -2.7F, 9.0F);
        this.RTtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(RTtenticel, 0.0F, 0.0F, 0.39269908169872414F);
        this.tenticel_8 = new ModelRenderer(this, 40, 60);
        this.tenticel_8.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_8.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.BLtenticel = new ModelRenderer(this, 40, 84);
        this.BLtenticel.setRotationPoint(3.0F, 2.0F, 9.0F);
        this.BLtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(BLtenticel, 0.0F, 0.0F, -0.7853981633974483F);
        this.RBtenticel = new ModelRenderer(this, 40, 60);
        this.RBtenticel.setRotationPoint(-5.0F, 0.3F, 9.0F);
        this.RBtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(RBtenticel, 0.0F, 0.0F, -0.39269908169872414F);
        this.shell_2 = new ModelRenderer(this, 48, 30);
        this.shell_2.setRotationPoint(0.0F, 0.0F, -16.0F);
        this.shell_2.addBox(-6.0F, -6.0F, -16.0F, 12, 12, 16, 0.0F);
        this.LBtenticel = new ModelRenderer(this, 40, 60);
        this.LBtenticel.mirror = true;
        this.LBtenticel.setRotationPoint(5.0F, 0.3F, 9.0F);
        this.LBtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(LBtenticel, 0.0F, 0.0F, 0.39269908169872414F);
        this.shell_5 = new ModelRenderer(this, 0, 54);
        this.shell_5.setRotationPoint(0.0F, 0.0F, -12.0F);
        this.shell_5.addBox(-3.0F, -3.0F, -14.0F, 6, 6, 14, 0.0F);
        this.shell = new ModelRenderer(this, 0, 0);
        this.shell.setRotationPoint(0.0F, 7.0F, 32.0F);
        this.shell.addBox(-8.0F, -8.0F, -8.0F, 16, 16, 16, 0.0F);
        this.setRotateAngle(shell, -0.27314402793711257F, 0.0F, 0.0F);
        this.tenticel_4 = new ModelRenderer(this, 40, 72);
        this.tenticel_4.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_4.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.tenticel_5 = new ModelRenderer(this, 40, 84);
        this.tenticel_5.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_5.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.tenticel_9 = new ModelRenderer(this, 40, 60);
        this.tenticel_9.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_9.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.TRtenticel = new ModelRenderer(this, 40, 72);
        this.TRtenticel.setRotationPoint(-3.0F, -4.5F, 9.0F);
        this.TRtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(TRtenticel, 0.0F, 0.0F, -0.7853981633974483F);
        this.tenticel_3 = new ModelRenderer(this, 40, 60);
        this.tenticel_3.mirror = true;
        this.tenticel_3.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_3.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.tenticel_2 = new ModelRenderer(this, 40, 84);
        this.tenticel_2.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_2.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.shell_6 = new ModelRenderer(this, 48, 0);
        this.shell_6.setRotationPoint(0.0F, 0.0F, -14.0F);
        this.shell_6.addBox(-2.0F, -2.0F, -12.0F, 4, 4, 12, 0.0F);
        this.Ttenticel = new ModelRenderer(this, 40, 72);
        this.Ttenticel.setRotationPoint(0.0F, -4.5F, 9.0F);
        this.Ttenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.LTtenticel = new ModelRenderer(this, 40, 60);
        this.LTtenticel.mirror = true;
        this.LTtenticel.setRotationPoint(5.0F, -2.9F, 9.0F);
        this.LTtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(LTtenticel, 0.0F, 0.0F, -0.39269908169872414F);
        this.TLtenticel = new ModelRenderer(this, 40, 72);
        this.TLtenticel.setRotationPoint(3.0F, -4.5F, 9.0F);
        this.TLtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(TLtenticel, 0.0F, 0.0F, 0.7853981633974483F);
        this.tenticel = new ModelRenderer(this, 40, 60);
        this.tenticel.mirror = true;
        this.tenticel.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.tenticel_6 = new ModelRenderer(this, 40, 84);
        this.tenticel_6.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_6.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.shell_4 = new ModelRenderer(this, 104, 39);
        this.shell_4.setRotationPoint(0.0F, 0.0F, -12.0F);
        this.shell_4.addBox(-4.0F, -4.0F, -12.0F, 8, 8, 12, 0.0F);
        this.Btenticel = new ModelRenderer(this, 40, 84);
        this.Btenticel.setRotationPoint(0.0F, 2.0F, 9.0F);
        this.Btenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.cap = new ModelRenderer(this, 122, 0);
        this.cap.setRotationPoint(0.0F, -7.0F, 8.0F);
        this.cap.addBox(-6.0F, 0.0F, -0.01F, 12, 3, 8, 0.0F);
        this.setRotateAngle(cap, -0.27314402793711257F, 0.0F, 0.0F);
        this.shell_1 = new ModelRenderer(this, 64, 0);
        this.shell_1.setRotationPoint(0.0F, 0.0F, -8.0F);
        this.shell_1.addBox(-7.0F, -7.0F, -16.0F, 14, 14, 16, 0.0F);
        this.BRtenticel = new ModelRenderer(this, 40, 84);
        this.BRtenticel.setRotationPoint(-3.0F, 2.0F, 9.0F);
        this.BRtenticel.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.setRotateAngle(BRtenticel, 0.0F, 0.0F, 0.7853981633974483F);
        this.tenticel_1 = new ModelRenderer(this, 40, 72);
        this.tenticel_1.setRotationPoint(0.0F, 0.0F, 9.5F);
        this.tenticel_1.addBox(-1.0F, -1.0F, -0.5F, 2, 2, 10, 0.0F);
        this.shell.addChild(this.head);
        this.head.addChild(this.shape14);
        this.shell_2.addChild(this.shell_3);
        this.TRtenticel.addChild(this.tenticel_7);
        this.head.addChild(this.RTtenticel);
        this.RTtenticel.addChild(this.tenticel_8);
        this.head.addChild(this.BLtenticel);
        this.head.addChild(this.RBtenticel);
        this.shell_1.addChild(this.shell_2);
        this.head.addChild(this.LBtenticel);
        this.shell_4.addChild(this.shell_5);
        this.Ttenticel.addChild(this.tenticel_4);
        this.Btenticel.addChild(this.tenticel_5);
        this.RBtenticel.addChild(this.tenticel_9);
        this.head.addChild(this.TRtenticel);
        this.LTtenticel.addChild(this.tenticel_3);
        this.BRtenticel.addChild(this.tenticel_2);
        this.shell_5.addChild(this.shell_6);
        this.head.addChild(this.Ttenticel);
        this.head.addChild(this.LTtenticel);
        this.head.addChild(this.TLtenticel);
        this.LBtenticel.addChild(this.tenticel);
        this.BLtenticel.addChild(this.tenticel_6);
        this.shell_3.addChild(this.shell_4);
        this.head.addChild(this.Btenticel);
        this.shell.addChild(this.cap);
        this.shell.addChild(this.shell_1);
        this.head.addChild(this.BRtenticel);
        this.TLtenticel.addChild(this.tenticel_1);
    }

	    // *** Methods ***
    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) { 
        this.shell.render(f5);
	if(this.isChild) {f5 = f5 * babyScaleNumber} this.shell.render(0.2); }
    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;

	@Override 
	protected void animationSwim(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) 
	{ 
	this.Ttenticel.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.Btenticel.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_5.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_4.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.TLtenticel.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.BLtenticel.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_6.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_1.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.TRtenticel.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.BRtenticel.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_7.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_2.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.LTtenticel.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.RTtenticel.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_8.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_3.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.LBtenticel.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.RBtenticel.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_9.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;

 	}
	@Override 

	protected void animationIdle(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) 
	{ 
	this.shell.rotateAngleX = MathHelper.cos(f * 0.45F);
	this.Ttenticel.rotateAngleX = MathHelper.cos(f * 0.23F) * f1;
	this.Btenticel.rotateAngleX = MathHelper.cos (f * -1.04F);
	this.tenticel_5.rotateAngleX = MathHelper.cos(f * -0.15F);
	this.tenticel_4.rotateAngleX = MathHelper.cos (f * 0.36F);
	this.TLtenticel.rotateAngleX = MathHelper.cos(f * 0.28F);
	this.BLtenticel.rotateAngleX = MathHelper.cos (f * -0.93F);
	this.tenticel_6.rotateAngleX = MathHelper.cos(f * -0.15F);
	this.tenticel_1.rotateAngleX = MathHelper.cos (f * 0.44F);
	this.TRtenticel.rotateAngleX = MathHelper.cos(f * 0.28F);
	this.BRtenticel.rotateAngleX = MathHelper.cos (f * -0.93F);
	this.tenticel_7.rotateAngleX = MathHelper.cos(f * 0.44F);
	this.tenticel_2.rotateAngleX = MathHelper.cos (f * -0.15F);
	this.LTtenticel.rotateAngleY = MathHelper.cos(f * 0.52F);
	this.RTtenticel.rotateAngleY = MathHelper.cos (f * -0.52F);
	this.tenticel_8.rotateAngleY = MathHelper.cos(f * -0.33F);
	this.tenticel_3.rotateAngleY = MathHelper.cos (f * 0.33F);
	this.LBtenticel.rotateAngleY = MathHelper.cos(f * 0.8F);
	this.RBtenticel.rotateAngleY = MathHelper.cos (f * -0.80F);
	this.tenticel_9.rotateAngleY = MathHelper.cos(f * -0.18F);
	this.tenticel.rotateAngleY = MathHelper.cos (f * 0.18F);
	}
@Override 
	protected void animationGrab(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) 
	{ 
	this.Ttenticel.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.Btenticel.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_4.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_5.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.TLtenticel.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.BLtenticel.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_1.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_6.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.TRtenticel.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.BRtenticel.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_2.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_7.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.LTtenticel.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.RTtenticel.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel_3.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_8.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.LBtenticel.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.RBtenticel.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.tenticel.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_9.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;

 	}
@Override 
	protected void animationAttack(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) 
	{ 
	this.Ttenticel.rotateAngleX = MathHelper.cos(f * 0.6662F);
	this.Btenticel.rotateAngleX = MathHelper.cos (f * 1.0F);
	this.tenticel_5.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_4.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.TLtenticel.rotateAngleX = MathHelper.cos(f * 0.6662F);
	this.BLtenticel.rotateAngleX = MathHelper.cos (f * 1.0F);
	this.tenticel_6.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_1.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.TRtenticel.rotateAngleX = MathHelper.cos(f * 0.6662F);
	this.BRtenticel.rotateAngleX = MathHelper.cos (f * 1.0F);
	this.tenticel_7.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_2.rotateAngleX = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.LTtenticel.rotateAngleY = MathHelper.cos(f * 0.6662F);
	this.RTtenticel.rotateAngleY = MathHelper.cos (f * 1.0F);
	this.tenticel_8.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel_3.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
	this.LBtenticel.rotateAngleY = MathHelper.cos(f * 0.6662F);
	this.RBtenticel.rotateAngleY = MathHelper.cos (f * 1.0F);
	this.tenticel_9.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1;
	this.tenticel.rotateAngleY = MathHelper.cos (f * 1.0F) * -1.0F * f1;
 	}

    }
}
