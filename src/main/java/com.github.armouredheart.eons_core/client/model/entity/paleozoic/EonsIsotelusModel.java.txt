// package
package com.github.armouredheart.eons_core.client.model.entity.paleozoic;

// Minecraft imports
import net.minecraft.util.math.MathHelper;
import net.minecraft.client.renderer.entity.model.RendererModel;
import net.minecraft.entity.Entity;

// Forge imports
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;

// Eons imports
import com.github.armouredheart.eons_core.client.model.entity.EonsEntityModel;

// misc imports
import com.mojang.blaze3d.platform.GlStateManager;

@OnlyIn(Dist.CLIENT)
public class EonsIsotelusModel<T extends Entity> extends EonsEntityModel<T>{
// *** Attributes ***
    public RendererModel body;
    public RendererModel HEAD;
    public RendererModel dome;
    public RendererModel legsL;
    public RendererModel legsR;
    public RendererModel dome_1;
    public RendererModel spike;
    public RendererModel eye;
    public RendererModel eye_1;
    public RendererModel spike_1;
    public RendererModel dome_2;
    public RendererModel dome_3;
    public RendererModel dome_4;
    public RendererModel dome_5;
    public RendererModel antenna;
    public RendererModel antenna_1;
    public RendererModel dome_6;
    public RendererModel dome_7;
    public RendererModel legsL2;
    public RendererModel legsR2;
    public RendererModel dome_8;
    public RendererModel dome_9;

 // *** Constructors ***
    public Eons_Isotelus_Model() {
        this.textureWidth = 64;
        this.textureHeight = 64;
        this.body = new ModelRenderer(this, 0, 0);
        this.body.setRotationPoint(0.0F, 22.4F, 1.0F);
        this.body.addBox(-6.5F, -1.5F, -4.5F, 13, 4, 9, 0.0F);
        this.dome_6 = new ModelRenderer(this, 0, 25);
        this.dome_6.setRotationPoint(0.0F, 0.5F, 7.0F);
        this.dome_6.addBox(-5.0F, -1.0F, 0.0F, 10, 2, 2, 0.0F);
        this.setRotateAngle(dome_6, 0.0F, 3.141592653589793F, 0.0F);
        this.eye = new ModelRenderer(this, 0, 0);
        this.eye.setRotationPoint(4.0F, -1.4F, -1.0F);
        this.eye.addBox(-0.5F, -0.5F, -1.0F, 1, 1, 2, 0.0F);
        this.setRotateAngle(eye, 0.0F, 0.22759093446006054F, -0.7853981633974483F);
        this.dome_8 = new ModelRenderer(this, 22, 28);
        this.dome_8.setRotationPoint(0.0F, 0.5F, -2.0F);
        this.dome_8.addBox(-4.0F, -0.5F, 0.0F, 8, 1, 2, 0.0F);
        this.dome_9 = new ModelRenderer(this, 22, 28);
        this.dome_9.setRotationPoint(0.0F, 0.4F, -1.7F);
        this.dome_9.addBox(-4.0F, -0.5F, 0.0F, 8, 1, 2, 0.0F);
        this.setRotateAngle(dome_9, 0.45378560551852565F, 0.0F, 0.0F);
        this.dome_1 = new ModelRenderer(this, 0, 19);
        this.dome_1.setRotationPoint(0.0F, 0.0F, -4.9F);
        this.dome_1.addBox(-6.0F, -1.5F, 0.0F, 12, 3, 3, 0.0F);
        this.dome_7 = new ModelRenderer(this, 24, 25);
        this.dome_7.setRotationPoint(0.0F, 0.4F, 6.3F);
        this.dome_7.addBox(-5.0F, -1.0F, 0.0F, 10, 1, 2, 0.0F);
        this.setRotateAngle(dome_7, 0.4679227724596797F, 3.141592653589793F, 0.0F);
        this.HEAD = new ModelRenderer(this, 0, 13);
        this.HEAD.setRotationPoint(0.0F, 0.6F, -5.5F);
        this.HEAD.addBox(-7.0F, -1.5F, -2.0F, 14, 3, 3, 0.0F);
        this.setRotateAngle(HEAD, 0.091106186954104F, 0.0F, 0.0F);
        this.legsL = new ModelRenderer(this, 6, 28);
        this.legsL.setRotationPoint(5.0F, 2.5F, -4.0F);
        this.legsL.addBox(0.0F, 0.0F, 0.0F, 0, 1, 8, 0.0F);
        this.legsR = new ModelRenderer(this, 6, 28);
        this.legsR.setRotationPoint(-5.0F, 2.5F, -4.0F);
        this.legsR.addBox(0.0F, -0.1F, 0.0F, 0, 1, 8, 0.0F);
        this.spike = new ModelRenderer(this, 35, 0);
        this.spike.setRotationPoint(6.5F, 0.4F, -2.0F);
        this.spike.addBox(-0.5F, 0.0F, 0.0F, 1, 1, 4, 0.0F);
        this.setRotateAngle(spike, 0.0F, 0.2897246558310587F, 0.0F);
        this.dome = new ModelRenderer(this, 29, 14);
        this.dome.setRotationPoint(0.0F, 0.7F, 4.1F);
        this.dome.addBox(-6.0F, -1.5F, 0.0F, 12, 3, 5, 0.0F);
        this.setRotateAngle(dome, -0.091106186954104F, 0.0F, 0.0F);
        this.dome_4 = new ModelRenderer(this, 41, 0);
        this.dome_4.setRotationPoint(0.0F, 0.5F, -1.0F);
        this.dome_4.addBox(-4.0F, -0.5F, 0.0F, 8, 1, 1, 0.0F);
        this.dome_3 = new ModelRenderer(this, 30, 22);
        this.dome_3.setRotationPoint(0.0F, 0.4F, -1.3F);
        this.dome_3.addBox(-5.0F, -1.0F, 0.0F, 10, 1, 2, 0.0F);
        this.setRotateAngle(dome_3, 0.4679227724596797F, 0.0F, 0.0F);
        this.dome_2 = new ModelRenderer(this, 35, 5);
        this.dome_2.setRotationPoint(0.0F, 0.5F, -2.0F);
        this.dome_2.addBox(-5.0F, -1.0F, 0.0F, 10, 2, 2, 0.0F);
        this.antenna = new ModelRenderer(this, 0, 4);
        this.antenna.setRotationPoint(-2.0F, 0.2F, 0.2F);
        this.antenna.addBox(0.0F, 0.0F, 0.0F, 0, 1, 5, 0.0F);
        this.setRotateAngle(antenna, 3.141592653589793F, 0.4679227724596797F, 0.0F);
        this.antenna_1 = new ModelRenderer(this, 0, 4);
        this.antenna_1.setRotationPoint(2.0F, 0.5F, 0.2F);
        this.antenna_1.addBox(0.0F, 0.0F, 0.0F, 0, 1, 5, 0.0F);
        this.setRotateAngle(antenna_1, 3.141592653589793F, -0.4679227724596797F, 0.0F);
        this.spike_1 = new ModelRenderer(this, 35, 0);
        this.spike_1.setRotationPoint(-6.5F, 0.4F, -2.0F);
        this.spike_1.addBox(-0.5F, 0.0F, 0.0F, 1, 1, 4, 0.0F);
        this.setRotateAngle(spike_1, 0.0F, -0.2897246558310587F, 0.0F);
        this.legsL2 = new ModelRenderer(this, 6, 28);
        this.legsL2.setRotationPoint(-4.0F, 1.5F, 2.0F);
        this.legsL2.addBox(0.0F, 0.0F, -4.0F, 0, 1, 8, 0.0F);
        this.setRotateAngle(legsL2, 0.0F, 0.18203784098300857F, 0.0F);
        this.legsR2 = new ModelRenderer(this, 6, 28);
        this.legsR2.setRotationPoint(4.0F, 1.5F, 2.0F);
        this.legsR2.addBox(0.0F, 0.0F, -4.0F, 0, 1, 8, 0.0F);
        this.setRotateAngle(legsR2, 0.0F, -0.18203784098300857F, 0.0F);
        this.eye_1 = new ModelRenderer(this, 0, 0);
        this.eye_1.setRotationPoint(-4.0F, -1.4F, -1.0F);
        this.eye_1.addBox(-0.5F, -0.5F, -1.0F, 1, 1, 2, 0.0F);
        this.setRotateAngle(eye_1, 0.0F, -0.22759093446006054F, 0.7853981633974483F);
        this.dome_5 = new ModelRenderer(this, 41, 2);
        this.dome_5.setRotationPoint(0.0F, 0.4F, -0.7F);
        this.dome_5.addBox(-4.0F, -0.5F, 0.0F, 8, 1, 1, 0.0F);
        this.setRotateAngle(dome_5, 0.5569345643113905F, 0.0F, 0.0F);
        this.dome.addChild(this.dome_6);
        this.HEAD.addChild(this.eye);
        this.dome_6.addChild(this.dome_8);
        this.dome_6.addChild(this.dome_9);
        this.HEAD.addChild(this.dome_1);
        this.dome.addChild(this.dome_7);
        this.body.addChild(this.HEAD);
        this.body.addChild(this.legsL);
        this.body.addChild(this.legsR);
        this.HEAD.addChild(this.spike);
        this.body.addChild(this.dome);
        this.dome_2.addChild(this.dome_4);
        this.dome_1.addChild(this.dome_3);
        this.dome_1.addChild(this.dome_2);
        this.dome_4.addChild(this.antenna);
        this.dome_4.addChild(this.antenna_1);
        this.HEAD.addChild(this.spike_1);
        this.dome.addChild(this.legsL2);
        this.dome.addChild(this.legsR2);
        this.HEAD.addChild(this.eye_1);
        this.dome_2.addChild(this.dome_5);
    }

  // *** Methods ***
    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) { 
        GlStateManager.pushMatrix();
        GlStateManager.translatef(this.body.offsetX, this.body.offsetY, this.body.offsetZ);
        GlStateManager.translatef(this.body.rotationPointX * f5, this.body.rotationPointY * f5, this.body.rotationPointZ * f5);
        GlStateManager.scaled(0.5D, 0.5D, 0.5D);
        GlStateManager.translatef(-this.body.offsetX, -this.body.offsetY, -this.body.offsetZ);
        GlStateManager.translatef(-this.body.rotationPointX * f5, -this.body.rotationPointY * f5, -this.body.rotationPointZ * f5);
        this.body.render(f5);
        GlStateManager.popMatrix();
    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
	this.HEAD.rotateAngleX = f4 / (180F / (float) Math.PI);

    }
}
