// package
package com.github.armouredheart.eons_core.client.model.entity.paleozoic;

// Minecraft imports
import net.minecraft.util.math.MathHelper;
import net.minecraft.client.renderer.entity.model.RendererModel;
import net.minecraft.entity.Entity;

// Forge imports
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;

// Eons imports
import com.github.armouredheart.eons_core.client.model.entity.EonsEntityModel;

// misc imports
import com.mojang.blaze3d.platform.GlStateManager;

@OnlyIn(Dist.CLIENT)
public class EonsAstraspisModel<T extends Entity> extends EonsEntityModel<T>{
// *** Attributes ***
    public RendererModel head;
    public RendererModel tail1;
    public RendererModel stomach;
    public RendererModel joint1;
    public RendererModel tail2;
    public RendererModel fin;
    public RendererModel fin_1;
    public RendererModel fin_2;
    public RendererModel fin_3;
    public RendererModel fin_4;

 // *** Constructors ***
    public EonsAstraspisModel() {
        this.textureWidth = 64;
        this.textureHeight = 32;
        this.stomach = new ModelRenderer(this, 42, 0);
        this.stomach.setRotationPoint(0.0F, 1.0F, -0.5F);
        this.stomach.addBox(-1.5F, -1.0F, -1.0F, 3, 2, 6, 0.0F);
        this.setRotateAngle(stomach, 0.18203784098300857F, 0.0F, 0.0F);
        this.joint1 = new ModelRenderer(this, 0, 0);
        this.joint1.setRotationPoint(0.0F, 0.0F, 5.0F);
        this.joint1.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 1, 0.0F);
        this.fin = new ModelRenderer(this, 15, 0);
        this.fin.setRotationPoint(0.0F, 0.3F, 3.3F);
        this.fin.addBox(-0.5F, -1.0F, 1.0F, 1, 2, 2, 0.0F);
        this.setRotateAngle(fin, 0.31869712141416456F, 0.0F, 0.0F);
        this.fin_1 = new ModelRenderer(this, 32, 0);
        this.fin_1.setRotationPoint(0.0F, -0.3F, 3.2F);
        this.fin_1.addBox(-0.5F, -1.0F, 1.0F, 1, 2, 2, 0.0F);
        this.setRotateAngle(fin_1, -0.31869712141416456F, 0.0F, 0.0F);
        this.fin_3 = new ModelRenderer(this, 18, 6);
        this.fin_3.setRotationPoint(0.0F, 1.0F, 2.9F);
        this.fin_3.addBox(-0.5F, 0.0F, 0.0F, 1, 2, 2, 0.0F);
        this.setRotateAngle(fin_3, 1.8668041679331349F, 0.0F, 0.0F);
        this.head = new ModelRenderer(this, 0, 0);
        this.head.setRotationPoint(0.0F, 23.0F, -1.5F);
        this.head.addBox(-2.5F, -1.5F, 0.0F, 5, 3, 5, 0.0F);
        this.setRotateAngle(head, 0.18203784098300857F, 0.0F, 0.0F);
        this.tail2 = new ModelRenderer(this, 36, 0);
        this.tail2.setRotationPoint(0.0F, 0.0F, -1.5F);
        this.tail2.addBox(-1.0F, -1.0F, 1.0F, 2, 2, 4, 0.0F);
        this.setRotateAngle(tail2, 0.091106186954104F, 0.0F, 0.0F);
        this.fin_2 = new ModelRenderer(this, 54, 0);
        this.fin_2.setRotationPoint(0.0F, 1.0F, 0.7F);
        this.fin_2.addBox(-0.5F, 0.0F, 1.0F, 1, 3, 2, 0.0F);
        this.setRotateAngle(fin_2, 0.7285004297824331F, 0.0F, 0.0F);
        this.tail1 = new ModelRenderer(this, 20, 0);
        this.tail1.setRotationPoint(0.0F, -0.1F, 3.3F);
        this.tail1.addBox(-2.0F, -1.5F, 1.0F, 4, 2, 4, 0.0F);
        this.setRotateAngle(tail1, -0.27314402793711257F, 0.0F, 0.0F);
        this.fin_4 = new ModelRenderer(this, 0, 0);
        this.fin_4.setRotationPoint(0.0F, 3.0F, 0.5F);
        this.fin_4.addBox(-0.5F, 0.0F, 0.0F, 1, 1, 1, 0.0F);
        this.setRotateAngle(fin_4, 1.8668041679331349F, 0.0F, 0.0F);
        this.tail1.addChild(this.stomach);
        this.tail1.addChild(this.joint1);
        this.tail2.addChild(this.fin);
        this.tail2.addChild(this.fin_1);
        this.fin_1.addChild(this.fin_3);
        this.joint1.addChild(this.tail2);
        this.fin.addChild(this.fin_2);
        this.head.addChild(this.tail1);
        this.fin_3.addChild(this.fin_4);
    }

  // *** Methods ***
    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) { 
        GlStateManager.pushMatrix();
        GlStateManager.translatef(this.head.offsetX, this.head.offsetY, this.head.offsetZ);
        GlStateManager.translatef(this.head.rotationPointX * f5, this.head.rotationPointY * f5, this.head.rotationPointZ * f5);
        GlStateManager.scaled(0.25D, 0.25D, 0.25D);
        GlStateManager.translatef(-this.head.offsetX, -this.head.offsetY, -this.head.offsetZ);
        GlStateManager.translatef(-this.head.rotationPointX * f5, -this.head.rotationPointY * f5, -this.head.rotationPointZ * f5);
        this.head.render(f5);
        GlStateManager.popMatrix();
    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
@Override 
protected void animationSwim(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	 {this.joint1.rotateAngleY = MathHelper.cos(f * 0.6662F) * f1; }

    }
}
