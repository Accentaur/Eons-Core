// package
package com.github.armouredheart.eons_core.common.entity.projectile;

// Minecraft imports
import net.minecraft.entity.EntityType;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.ai.attributes.AttributeModifier;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.inventory.EquipmentSlotType;
import net.minecraft.entity.Entity;
import net.minecraft.entity.projectile.AbstractArrowEntity;
import net.minecraft.network.datasync.DataParameter;
import net.minecraft.network.datasync.DataSerializers;
import net.minecraft.network.datasync.EntityDataManager;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.item.IItemTier;
import net.minecraft.item.ItemTier;
import net.minecraft.particles.ParticleTypes;
import net.minecraft.potion.EffectInstance;
import net.minecraft.potion.Potion;
import net.minecraft.util.registry.Registry;
import net.minecraft.world.World;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;

// Forge imports
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;

// Eons imports
import com.github.armouredheart.eons_core.init.EonsItems;
import com.github.armouredheart.eons_core.init.EonsEntityTypes;
import com.github.armouredheart.eons_core.common.item.core.EonsSpearItem;

// misc imports
import com.google.common.collect.Multimap;
import java.util.Set;
import com.google.common.collect.Sets;

/** Based on Trident and Sword classes */
public class EonsSpearEntity extends AbstractArrowEntity {

    // *** Attributes ***
    private static final DataParameter<Integer> COLOR = EntityDataManager.createKey(EonsSpearEntity.class, DataSerializers.VARINT);
    private static final EntityType<? extends EonsSpearEntity> EONS_SPEAR_ENTITY = EonsEntityTypes.EONS_SPEAR_ENTITY.get();
    private static final ItemStack EONS_SPEAR_ITEM = EonsItems.EONS_SPEAR_ITEM.get();
    private final Set<EffectInstance> customPotionEffects = Sets.newHashSet();
    private Potion potion = Potions.EMPTY;
    private boolean fixedColor;
    private ItemStack thrownSpear;

    // *** Constructors ***

    /** Called in registration */
    public EonsSpearEntity(EntityType<? extends EonsSpearEntity> entityType, World world) {
        super(entityType, world);
    }

    /** Called when item is used */
    public EonsSpearEntity(World world, LivingEntity livingEntity, ItemStack itemStack) {
        super(EONS_SPEAR_ENTITY, entityType);
        this.thrownSpear = itemStack;
    }

    @OnlyIn(Dist.CLIENT)
    public EonsSpearEntity(World world, double posX, double posY, double posZ) {
        super(EONS_SPEAR_ENTITY, world, posX, posY, posZ);
    }

    // *** Methods ***

    /** Return ItemTier of SpearItem that threw this entity, called in renderer for texture reasons */
    public IItemTier getTier() {
        return this.thrownSpear.getTier();
    }

    /** */
    @Override
    protected void tryDespawn() {
        ++this.ticksInGround;
        if (this.ticksInGround >= 12000) {
            this.remove();
        }
    }

    /** */
    @Override
    public void shoot(Entity shooter, float pitch, float yaw, float roll, float velocity, float inaccuracy) {
        super(shooter, pitch, yaw, roll, velocity, inaccuracy);
    }

    /** */
    @Override
    protected void arrowHit(LivingEntity livingEntity) {
        super.arrowHit(livingEntity);

        // Apply potion effects to hit entity
        for(EffectInstance effectinstance : this.potion.getEffects()) {
            livingEntity.addPotionEffect(new EffectInstance(effectinstance.getPotion(), Math.max(effectinstance.getDuration() / 8, 1), effectinstance.getAmplifier(), effectinstance.isAmbient(), effectinstance.doesShowParticles()));
        }

        // Apply custom effects
        if (!this.customPotionEffects.isEmpty()) {
            for(EffectInstance effectinstance1 : this.customPotionEffects) {
                livingEntity.addPotionEffect(effectinstance1);
            }
        }
    }

    /** */
    @Override
    protected ItemStack getArrowStack() {
        return this.thrownSpear;
    }

    /** Get potion effects from itemstack and apply them to this entity */
    public void setPotionEffect(ItemStack itemStack) {

    }
}